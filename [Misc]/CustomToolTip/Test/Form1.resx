<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="ToolTip1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="Button1.ToolTipImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        NkyVIvXcrm9RuOUywuY1wyN929a7H/Ci52mbn6W8zUtQl3x1v+0ZOi+Nm6vu6Z/DbYJFrcC8JAAfqQOP
        6H0Q6wB3F7hk5KqLHShXUqoH0utAhLyBkWsvYvK7lzFz+xVM33IJI5a1ymStOt8jtIipktmGE5ae/8m2
        sSdv3PMrT2aAnqaYN1Z6jNl5znP8XnhPrEJ/CSBYAgiRRm7gjOMYJFsfoXNPqgU417BcBsYsPYtkWYxk
        rJG5US7zYuMFpK86i2ELjqsCZU5YywrLIsU8z1TJv3X7X7PaRUNL8d8CWMZNfYYtm+eWsmm39/jd8J14
        QL4+qsLAwnqEFx9FxLwTiFnQgoRFrUhZdhqJS1qQuLQFUbIJ/ERJIwLlq1qvcX/d5xK9nI0Zexu2B6yw
        /N38Gz/tW0lHsjsYZwv7H/of6/2bh/xDeoWXFpti165zT926x2PMXyzembuvPpK9H4/Il9c+2fuuemX8
        T43H2L/sdU1cX/bwkPkld2v9PBfl7CrZmJH4v/dfDboIhoFQLe4Sc7Jxr5LbfdwxY+rjvg1JErzmGJ/x
        M/wsf4Y/+//7zx43eCv8QvouAf17j6CbrizV5TXH+Iyf4Wf/Jf+h8n8UAqy40GGE5gAAAABJRU5ErkJg
        gg==
</value>
  </data>
</root>