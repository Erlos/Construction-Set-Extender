Script Validator
================
 ++   * Blocktype invalid for this type of script (GECK catches this when reference-specific blocktypes are used for quest scripts, but not when effect-only blocktypes are used in non-effect scripts)
 ++   * Script already has a ScriptName declaration 
 ++   * Condition not allowed (applied to lines starting with "Return", "End", "else" and "endif"
 ++   * Multiple editorIDs (applied to ScriptName declarations)
 ++   * EditorID starts with a number
 ++   * EditorID contains invalid character (applied to ScriptName declarations. The compiler will truncate the editorID just before the invalid character)
 ++   * EditorID starts with a number (applied to "set" commands with remote variables. The compiler will say that it can't find the variable, whereas the error is due to the editorID starting with a number)
 ++   * Variable declaration invalid within Begin/End block
 ++   * Variable "varName" has already been declared
 ++		The validator will also give a warning if a variable is declared but not used, and if a condition appears on its own line (therefore having no use). All other warnings and errors should be caught by the compiler already.

Preprocessor
============
. Preprocessor directives must be on a line of their own
. Prepro. macro names must be in uppercase and can only contain alpha numerics and underscores
. Preproc macro names must be delimited with one of the following chars to be recognized : .,<WHITESPACE>(){}[]<TABCHAR><NEWLINECHAR>
. The code that uses or defines such macros mustn't be modified outside CSE's script editor.

To-Do
=====
MISC-->
> Nudge IanPat to implement the loader fix

BE---->
> Look into the extraData fuckup
> Filter out refs that don't have ownership data and count

CSE--->
> Console window brings down the cs when usign the main window as its parent
> Figure out how to update the model of references
> Add an "All Active Mods" button to the Data screen
> Look into fixing lip sync generation

# The ability to specify a custom workspace.
# Allow selecting a faction for the IsCellOwner test in an AI pack's conditions. The function accepts factions in scripts, and the game will honor it if you use TES4Edit to force one in, but you can't use the CS to simply set one.
# NPC refs update visually when their inventory is changed without plugin reload
# Option to automatically dump & reload models on cell load without plugin reload
# Default z-coordinate when one drops pieces in the render window
# On-the-fly adjustment of zoom sensitivity

* The ability to generate more than one distant land LOD per sitting. Currently, you can do one that comes out reasonably well. All subsequent attempts I've ever seen result in a random jumble of useless triangles in the mesh.
* Land LOD meshes that aren't such terrible approximations of the real landscape. I remember seeing somewhere that what we get is a 1% representation of the real thing. Could we bump this to 5% or something?
* The ability to generate landscape LOD textures that are better than the 1024x1024 quality we get now. Something on the quality level of the local maps. Or at the very least higher resolution.
* Fix the bug that causes black squares on the LOD texture if you switch to a different window. Annoying.
* Don't make the LOD texture generator load all the objects on the surface since they're not going to be used in the results anyway. Saves untold amounts of memory.
* Generate the textures and normal maps for LOD land in DXT1 format with appropriate mipmap levels to start with. Easy enough to fix, but why incur extra work?

SE---->
> Script Validator seems to be wonky at times - Try it on VectorDiseaseTokenOS
> Compiler errors are offset by the CSE block
> Find seems to edit the send a message to save
> IMPLEMENT AVALONEDIT
> Implement regEx
> Make changes to script type trigger an edit response

# Ability to select multiple scripts to open, and have each open in a new tab.
# Be nice if there was a Sanitize option that forced proper capitalization of function names(begin->Begin, elseif->ElseIf, etc) and stripped excess whitespace.